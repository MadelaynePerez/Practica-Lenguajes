/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.practica.lenguajes;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import tokens.Boton;
import tokens.Token;
import tokens.TokenVB;

/**
 *
 * @author DELL
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form editor
     */
    public Editor() {
        initComponents();
        Token.InicializarTokens();
        LineNumberingTextArea lineNumberingTextArea = new LineNumberingTextArea(this.jTextArea1);
        jScrollPane1.setRowHeaderView(lineNumberingTextArea);
        this.jTextArea1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent documentEvent) {
                lineNumberingTextArea.updateLineNumbers();
            }

            @Override
            public void removeUpdate(DocumentEvent documentEvent) {
                lineNumberingTextArea.updateLineNumbers();
            }

            @Override
            public void changedUpdate(DocumentEvent documentEvent) {
                lineNumberingTextArea.updateLineNumbers();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jSplitPane1.setLeftComponent(jScrollPane1);
        jSplitPane1.setRightComponent(jScrollPane2);

        jMenu1.setText("File");

        jMenuItem1.setText("Cargar archivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Reporte");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        abrirArchivo();
        pintarCuadros();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Reporte reporte = new Reporte();
        reporte.LlenarTabla(celdas);
        reporte.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    Boton[][] celdas;

    private void pintarCuadros() {
        String[] lineas = this.jTextArea1.getText().split("\\r?\\n");
        ArrayList<String[]> palabras = new ArrayList();

        int filas = lineas.length;
        int columnas = 0;

        //obtener palabras
        for (String linea : lineas) {
            String[] tmp = linea.split("\\s");
            palabras.add(tmp);
            if (tmp.length > columnas) {
                columnas = tmp.length;
            }
        }

        JPanel panel = new JPanel(new GridLayout(filas, columnas));
        celdas = new Boton[filas][columnas];

        for (int i = 0; i < filas; i++) {
            String[] filaPalabras = palabras.get(i);
            for (int j = 0; j < columnas; j++) {
                TokenVB token = null;
                if (filaPalabras.length > j) {
                    token = Token.ObtenerToken(filaPalabras[j]);
                }
                if (token != null && token.Tipo == TokenVB.TipoToken.SQUARE) {

                    // Cambiar color
                    String[] tmp = token.Simbolo.split("\\,");
                    int fila = Integer.parseInt(tmp[1]);
                    tmp[2] = tmp[2].replace(")", "");
                    int columna = Integer.parseInt(tmp[2]);
                    Color color = Color.decode(token.Color);
                    celdas[fila][columna].setBackground(color);

                    //Poner color de reservado
                    token.Color = "#60A917";

                }

                celdas[i][j] = new Boton(token, i, j);
                celdas[i][j].setColor();
                panel.add(celdas[i][j]);
                if (token != null) {
                    celdas[i][j].addActionListener(crearActionListener(token.Simbolo));
                }
            }
        }

        this.jScrollPane2.setViewportView(panel);
    }
      
    Graficar generarGrafica = new Graficar ();
      int temporal =0;           

    private  ActionListener crearActionListener(String lexema) {
        return new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                temporal++;
                generarGrafica.GenerarGrafico(lexema, temporal );
                AutomataGrafica grafica = new AutomataGrafica (temporal);
               grafica.setVisible(true);
            }
        };
    }

    private void abrirArchivo() {
        JFileChooser fileChooser = new JFileChooser();

        int resultado = fileChooser.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();

            try (BufferedReader br = new BufferedReader(new FileReader(archivoSeleccionado))) {
                this.jTextArea1.setText(""); // Limpiar el JTextArea antes de cargar el nuevo archivo
                String linea;
                while ((linea = br.readLine()) != null) {
                    this.jTextArea1.append(linea + "\n");
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al leer el archivo: " + ex.getMessage());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
